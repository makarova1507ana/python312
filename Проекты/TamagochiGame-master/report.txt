Игра Тамагочи

Требования к проекту:
Функциональные требования:

Создание и управление питомцем (Тамагочи) в игре.

Возможность взаимодействия с питомцем с помощью команд, вводимых пользователем.

Питомец должен иметь начальные характеристики: счастье, сытость и сон, которые изменяются со временем и в ответ на команды пользователя.

Команды пользователя должны влиять на состояние питомца: увеличивать его счастье, сытость или сон.

Вывод текущих характеристик питомца на экран.

Опционально: возможность отменить бессмертность питомца.

Нефункциональные требования:
Интуитивно понятный интерфейс для взаимодействия с питомцем.
Система управления должна быть простой и эффективной.

Питомец должен реагировать на действия пользователя и изменять свои характеристики со временем.

Программа должна быть стабильной и не должна выдавать ошибок при работе.

Рекомендации по реализации классов

Классы:
Класс Tamagotchi: Отвечает за управление питомцем. Включает методы для изменения характеристик питомца (счастья, сытости, сна) и обработки команд пользователя.
Класс UserInterface: Отвечает за интерфейс взаимодействия с пользователем. Включает методы для вывода текущих характеристик питомца и приема команд от пользователя.
Класс Time: Отслеживает время в игре и обновляет характеристики питомца со временем.

#-------------------Отчёт о проделанной работе-----------------------#
Блок 1 Понедельник
______________________________________________________________________
Шаг 1: Разделение обязанностей

Артём - разработка class Time
Наталья - разработка class Tamagochi
Арман - разработка интерфейса (class InterFace) и сведение классов Time, Tamagochi внутрь класса Interface

Шаг 2 Прошёл 1 час с момента создания команды №3:
________________________________________________________________________
Наталья: 
Выполнила инициализацию класса Tamagochi
	Написаны методы:
- Сон (питомец засыпает, атрибуты: бодорствования +, сытость-, счастье- )
- Еда (питомец ест, атрибуты: бодорствования-, сытость+, счастье-)
- Играть (питомец играет, атрибуты: бодорствования-, сытость-, счастье+)
- Метод перегрузки __str__
Конец 1 часа - реализация псевдопрототипа класса для дебаггеринга
Совещание с командой. Установление критических моментов
_________________________________________________________________________
Артём:
Выполнена инициализация класса Time:
	Написаны методы:
- Старт времени (атрибут время)
- Раннее время (атрибут время, возвращает количество времени от старта до начала реализации метода старта)
- Обновление атрибутов (атрибут объект, выполняет функцию обновления атрибутов для объектов в течении 120 секунд
- Уменьшение атрибутов бодорствования, счастья и сытости, уменьшает атрибуты в ед. времени

 Конец 1 часа с момента начала работы - реализация отладочного класса Pet и дебаггеринг, совещание с командой
по вопросам отладочной печати.
_________________________________________________________________________
Арман:
Выполнена инициализация класса UserInterface:
	Выполнена инициализация командной строки
	Создание цикла командной строки
	Реализация условий для команд
	Корректировка участников команд и помощь в разработке Артёма и Натальи.
Конец 1 часа с момента начала работы - создание отладочного класса Pet и дебаггеринг
_____________________________________________________________________________________


Конец занятия группы python 312. Совещание с Макаровой Анастасией.
Поиск решения проблем. Остановка процесса разработки.
_____________________________________________________________________________________
Блок 2 Вторник

Наталья: добавление случайных событий в класс Tamagochi
добавление метода смерти 
добавление метода ничегонеделанья

Класс тамагочи готов к внедрению
______________________________________________________________________________________
Артём: фиксирование багов, устранение багов внутри класса Time
Проблема с внедрением класса озвучена на совещании.
______________________________________________________________________________________
Арман: Внедрение class Тамагочи  - успешно.

Внедрение класса Время - проблемы:

Проблема №1 - Отслеживание времени жизни питомца
Проблема №2 - Уменьшение атрибутов с течением времени
Проблема №3 - Валидация имени питомца
Совещание и разработка остановлены.
______________________________________________________________________________________
Блок 3 Среда

Наталья - принимает участвие в разработке валидации с помощью модуля регулярных выражений

Артём совместно с Арманом устраняют баги:

Проблема №1 - Решена
Проблема №2 - Не решена. Предложение по замене уменьшения атрибутов с течением времени на уменьшение
при нажатии команды пользователя.
Проблема №2 - Решена.
Проблема №3 - Решена.

Написание отчёта о проделанной работе.

Состыковка файлов между собой.

Дебаггеринг на наличие ошибок - Успешно.
Проект готов к сдаче и защите.

