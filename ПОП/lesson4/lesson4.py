# # # задача
# # # Дано:
# # # n - кол-во сторон (гарантируется, что число целое)
# # # a - сторона многоугольника
# # # is_fill - нужно залить фигуру (гарантируется, что будет использован только логический тип данных)
# # # нарисовать ПРАВИЛЬНЫЙ многоугольник по заданным характеристикам
# #
# # #Алгоритм
# # # 1 - как нарисовать правильный многоугольник? (треугольник (3, 60), квадрат(4, 90), 5угольник (5, 120) ...  и т.д.)
# # #       1.1 n - кол-во сторон
# # #       1.2 angle - угол между двумя сосденими сторона 180*(n−2)/n
# # # 2 - заливка фигуру begin_fill()  &  end_fill()
# #
# # from turtle import *
# # from time import *
# # a = 100
# # n = 3
# # angle = 180*(n-2)/n
# # is_fill = False # True-закрашиваем or False - не закрашиваем
# # if is_fill:
# #     begin_fill()
# # for n_line in range(n):
# #     forward(a)
# #     left(180 - angle)
# # end_fill()
# # sleep(5)
# #
# # # begin_fill()
# # # circle(100)
# # # end_fill()
# # # sleep(5) #ожидаю получить закрашенный круг
#
#
# # даны два числа и операция, реализовать интерфейс для вычисления умножения или деления,
# # если введено неверное значение или операция сообщить об этом
#
# # ввод
# # 2 2 *  | 2 2 /  | 2 0 /
# # вывод
# # 4     | 1      | ошибка(разработчик Этой программы создал ее)
#
# # num1 = 2
# # num2 = 0
# # operation = input("Какая операция (* или /)? ")
# # if operation == '*':
# #     print(num1 * num2)
# # elif operation == '/':
# #     if num2 != 0:
# #         print(num1 / num2) # ZeroDivisionError: division by zero
# #     else:
# #         print("division by zero")
# # else:
# #     print("нет такой операции")
#
#
# #--------------------------обработка исключений------------------------------#
# # try (один в одном блоке)
# # except (сколько угодно в одном блоке)
# # else (необязательно)
# # finally (необязательно)
# # ----------------------- try, except, finally ---------------------#
# # try: #что-то пытаемся сделать
# #   если нет ошибок, то код выполняется в этом блоке до конца этого блока
#
# # except: # если были ошибки, то попадет в этот блок
# #   # обработка ошибок
#
# # else:# если  НЕ  было ошибок, то попадет в этот блок
#
# # finally: #срабтывает в любом случае
# #   # подгтовка данных и программы для корректного завершения работы
#
#
# # # ---------------------------------Пример---------------------------------------#
# # # деление
# # x = 4
# # y = 2
# # try:
# #     result = x / y
# # except ZeroDivisionError: #можем указать конкретную ошибку, а можно  слушать любую ошибку
# #     print("division by zero!")
# # except:
# #     print("unknown error")
# # else:
# #     print("result is", result)
# # finally:
# #     print("executing finally clause")
# #
# num1 = 2
# num2 = 0
# operation = input("Какая операция (* или /)? ")
# if operation == '*':
#     print(num1 * num2)
# elif operation == '/':
#     try:
#         print(num1 / num2) # ZeroDivisionError: division by zero если возникла перейдем на 97 строку
#     except ZeroDivisionError:
#         print("division by zero")
# else:
#     print("нет такой операции")
#

# #--------------------------Задание-------------------------------#
# #посчитать произведение двух чисел,
# # даны константы(создана переменная) pi = 3.14 и константа r = 5
# # s = ?
# try:
#     num1 = float(input("num1 = "))
#     num2 = float(input("num2 = "))
#     print(num1 * num2)
# except:
#     print("ValueError")
# finally:
#     print("КОНЕЦ 1 части программы")
# pi = 3.14
# r = 5
# print(pi * r)


# # # Задание 2: Дан список элементов 1, 3, 22, 7, 12, 8, 2
# # (могут быть какие-то другие значения, ввод данных делать не нужно)
# # # 2.1. показать каждый элемент, последняя цифра которого 2
#
# sheet = [1 , 3, 22, 7, 12, 8, 2, 102, 76]
# print('Элементы, последняя цифра которого 2:')
# for i in sheet:
#     print(f"\n{i}% {10} = {i%10}") #отладочная печать
#     if i % 10 == 2:
#         print(i, end = ' ')
# print('\n')
