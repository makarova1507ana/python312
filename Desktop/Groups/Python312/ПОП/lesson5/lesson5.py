# #----------------------------------- —Ä–∞–∑–±–æ—Ä –¥–∑---------------------------#
# # # –¥–∞–Ω  —Å–ø–∏—Å–æ–∫
# # # –Ω–∞–π—Ç–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ —ç—Ç–æ–º —Å–ø–∏—Å–∫–µ,
# # –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö –∏–∑–≤–ª–µ–∫–∞–µ—Ç—Å—è –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–æ—Ä–µ–Ω—å –≤ –≤–∏–¥–µ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞ (4, 16 –∏ —Ç.–¥.)
# el = 40 #49 #40
# print(el**0.5 % 1) # –æ—Ç–ª–∞–¥–æ—á–Ω–∞—è –ø–µ—á–∞—Ç—å
#
# # el**0.5 % 1  - –µ—Å–ª–∏ 0.0 -> –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –¥–∞–µ—Ç —Ü–µ–ª—ã–π –∫–æ—Ä–µ–Ω—å
# if el**0.5 % 1 == 0:
#     print(int(el**0.5))
# else: # el**0.5 % 1  - –µ—Å–ª–∏  != 0.0 ->–ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –¥–∞–µ—Ç –Ω–µ—Ü–µ–ª—ã–π –∫–æ—Ä–µ–Ω—å
#     print("–Ω–µ—Ç —Ü–µ–ª–æ–≥–æ –∫–æ—Ä–Ω—è")







#----------------------------------- —Ä–∞–±–æ—Ç–∞ —Å –∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏ -------------------------------------#

# ------------------------------ –ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö----------------------------------- #
# –∫–æ–ª–ª–µ—Ü–∏—è - –Ω–∞–±–æ—Ä –∑–Ω–∞—á–µ–Ω–∏–π  (–º–∞—Å—Å–∏–≤)
# array - –º–∞—Å—Å–∏–≤ - –Ω–∞–¥–æ –ø–æ–¥–∫–ª—é—á–∞—Ç—å - –¥–∏–Ω–∞–º–µ—á–µ—Å–∫–∏–π —Ä–∞–∑–º–µ—Ä + –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö
# list - —Å–ø–∏—Å–æ–∫
# tuple - –∫–æ—Ä—Ç–µ–∂
# set - –º–Ω–æ–∂–µ—Ç—Å–≤–æ
# dict (dictinary) - —Å–ª–æ–≤–∞—Ä—å

# # tuple - –∫–æ—Ä—Ç–µ–∂
# # –∑–Ω–∞—á–µ–Ω–∏—è –º–æ–≥—É—Ç –±—ã—Ç—å –ª—é–±–æ–≥–æ —Ç–∏–ø–∞
# # –ù–æ –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å (–Ω–∏ –¥–æ–±–∞–≤–∏—Ç—å, –Ω–∏ —É–±–∞–≤–∏—Ç—å –∏ –Ω–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å )
# # t = (1, "Hello", [2, 3])
# # t[0] = 5 # TypeError: 'tuple' object does not support item assignment
# t = (1,2, [3, 4])
#
#
# # –ü–æ–¥—É–º–∞—Ç—å –¥–æ–º–∞
# #  t = (1,2, [3, 4])  !!! t[0] = 5  - –Ω–µ–ª—å–∑—è —Ç–∞–∫ –¥–µ–ª–∞—Ç—å!!!
# # t[2][0] = 5 - –º–æ–∂–Ω–æ –ª–∏ —Ç–∞–∫? –æ—Ç–≤–µ—Ç–∏—Ç—å –∏ —Ä–∞—Å–ø–∏—Å–∞—Ç—å –ø–æ—á–µ–º—É
# # t[2] = 5 - –º–æ–∂–Ω–æ –ª–∏ —Ç–∞–∫? –æ—Ç–≤–µ—Ç–∏—Ç—å –∏ —Ä–∞—Å–ø–∏—Å–∞—Ç—å –ø–æ—á–µ–º—É




# # # set - –º–Ω–æ–∂–µ—Ç—Å–≤–æ
# # # –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Ä–∞–∑–º–µ—Ä
# # # —Ö—Ä–∞–Ω–∏—Ç —Ç–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (–ø—Ä–∏–º–∏—Ç–∏–≤–Ω—ã–µ —Ç–∏–ø—ã –∏ –∫–æ—Ä—Ç–µ–∂)
# l = ['0',8,1,1,1,1,2,111111,3,4,5,7,1, '1']
# s = set(l)
# print(s)
# –ù–ï–õ–¨–ó–Ø –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –ø–æ –∏–Ω–¥–µ–∫—Å—É
# # s[0] # TypeError: 'set' object is not subscriptable


# #----------------------------------- –ó–∞–¥–∞—á–∫–∏ -------------------------------------#
# # –î–∞–Ω –∫–æ—Ä—Ç–µ–∂ —á–∏—Å–µ–ª, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–π—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç,
# # –∫–æ—Ç–æ—Ä—ã–π –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è –±–æ–ª—å—à–µ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö
# t = (1, 3, 3, 2, 3, 3, 4, 5, 6, 7, 8, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,)
# unique_nums = set(t) # –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π
#
# for el in unique_nums:
#     print(f"{el} –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è {t.count(el)}")



#----------------------------------- –ó–∞–¥–∞—á–∫–∏ -------------------------------------#
# –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –ø–∏–Ω-–∫–æ–¥–æ–≤ (4 —Ü–∏—Ñ—Ä—ã) 5678
# –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–æ–π –ø–∏–Ω –≤ –Ω–∞—à–µ–π –±–∞–∑–µ –ø–∏–Ω-–∫–æ–¥–æ–≤ (4444, 1111 ,
# –¥–æ–±–∞–≤–∏—Ç—å –≤ –±–∞–∑—É, –µ—Å–ª–∏ –æ–Ω –æ—Ç—Å—É—Ç–≤—É–µ—Ç
# pin_codes = [1111, 2222, 3333, 4444]
# user_pin = 5679
# # –±–ª–æ–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —á—Ç–æ —Ü–∏—Ñ—Ä 4 –≤ —á–∏—Å–ª–µ
# if user_pin in pin_codes:
#     print("—Ç–∞–∫–æ–π –ø–∏–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
# else:
#     pin_codes.append(user_pin)
#
# pin_codes = {1111, 2222, 3333, 4444}
# user_pin = int(input())
# pin_codes.add(user_pin)
# print(pin_codes)




#
# # dict (dictinary) - —Å–ª–æ–≤–∞—Ä—å
# # –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Ä–∞–∑–º–µ—Ä, (–ê—Å—Å–æ—Ü–∏–∞—Ç–∏–≤–Ω—ã–π –º–∞—Å—Å–∏–≤)
# # –∫–ª—é—á(–î–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ): –∑–Ω–∞—á–µ–Ω–∏–µ(–º–æ–∂–µ—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è)
# d = {"key": 1, 2.1: 1, 0: {1:1, 2:2} , "list":[1,2]}
# print(d)


# –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
# d[–∫–ª—é—á] = –∑–Ω–∞—á–µ–Ω–∏–µ



# # #----------------------------------- –ó–∞–¥–∞—á–∫–∏ -------------------------------------#
# # # –¥–∞–Ω –∫–æ—Ä—Ç–µ–∂ —á–∏—Å–µ–ª, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ—Å—á–∏—Ç–∞—Ç—å –∫–æ–ª-–≤–æ –≤—Å–µ —á–∏—Å–µ–ª
# # # –∏ –∑–∞–ø–∏—Å–∞—Ç—å –∏—Ö –≤ —Å–ª–æ–≤–∞—Ä—å
# # numbers = (1, 2, 3, 1, 2, 3, 5, 2)
# # unique_nums = set(numbers)#–¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
# # d = {}
# # for el in unique_nums:
# #     count = numbers.count(el)
# #     d[f"—á–∏—Å–ª–æ {el}"] = count # d[–∫–ª—é—á] = –∑–Ω–∞—á–µ–Ω–∏–µ
# #     print(f"{el} –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è {count}") #–æ—Ç–ª–∞–¥–æ—á–Ω–∞—è –ø–µ—á–∞—Ç—å
# # print(d)
#
#
# # –ø–µ—Ä–µ–±–æ—Ä –∫–ª—é—á–µ–π –∏ –∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π
# d = {'—á–∏—Å–ª–æ 1': 2, '—á–∏—Å–ª–æ 2': 3, '—á–∏—Å–ª–æ 3': 2, '—á–∏—Å–ª–æ 5': 1}
# for key in d:
#     # print(f"key = {key}")
#     # print(f"–∑–Ω–∞—á–µ–Ω–∏–µ(value) = {d[key]}")
#     print(f"d['{key}'] = {d[key]}")
#
# # —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –≤ —Å–ª–æ–≤–∞—Ä–µ
# d['—á–∏—Å–ª–æ 5']= '*'
# print(d)
#
# # —É–¥–∞–ª–µ–Ω–∏–µ –∫–ª—é—á–µ–π(–∑–Ω–∞—á–µ–Ω–∏–µ —Ç–æ–∂–µ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ ) –≤ —Å–ª–æ–≤–∞—Ä–µ
# d.pop('—á–∏—Å–ª–æ 5')
# print(d)
#
# # —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø–∞—Ä—ã (–∫–ª—é—á–∞: –∑–Ω–∞—á–µ–Ω–∏–π) –≤ —Å–ª–æ–≤–∞—Ä–µ
# d.popitem()
# print(d)


#----------------------------------- –ó–∞–¥–∞—á–∫–∏ -------------------------------------#
# –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –Ω–æ–º–µ—Ä –º–µ—Å—è—Ü–∞,
# –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –∫–æ–ª-–≤–æ –¥–Ω–µ–π
# (–Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ –º–æ–¥—É–ª–∏)
# months = {"1": 31, "2": [28, 29], "3": 31}
# num_month  = 2
# try:
#     print(months[str(num_month)])
# except:
#     print("–Ω–µ–≤–µ—Ä–Ω–æ –∑–∞–¥–∞–Ω –Ω–æ–º–µ—Ä –º–µ—Å—è—Ü–∞")

# # -----------------------2 —Å–ø–æ—Å–æ–±------------------------#
# days_in_month = {31: [1,3,5,7,8,10,12], 30: [4,6,9,11], 29: [2], 28: [2]}
# num_month = 7
# flag = False
# for key in days_in_month:
#     for month in days_in_month[key]:
#         if num_month == month:
#             print(key)
#             flag = True
#             break
#     if flag:
#         break

# #----------------------------------- –ó–∞–¥–∞—á–∫–∏ -------------------------------------#
# # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç  –∫–æ–ª-–≤–æ –¥–Ω–µ–π –≤ –º–µ—Å—è—Ü–µ,
# # –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –º–µ—Å—è—Ü–∞
# # (–Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ –º–æ–¥—É–ª–∏)
# months = {"1": 31, "2": 28, "3": 31, "4": 30, "5": 31, "6": 30} # –ú–µ–Ω—è—Ç—å —Å–ª–æ–≤–∞—Ä—å –Ω–µ–ª—å–∑—è
# # print(months.values())
# # print(months.get("1"))
# # print(months.items())
# num_month  = 31
# try:
#     for key in months:
#         if months[key] == num_month:
#             print(key)
# except:
#     print("–Ω–µ–≤–µ—Ä–Ω–æ –∑–∞–¥–∞–Ω –Ω–æ–º–µ—Ä –º–µ—Å—è—Ü–∞")


# -------------------------- –°—Ç—Ä–æ–∫–∏ ------------------------------------ #
# —Å—Ç—Ä–æ–∫–∞ - –Ω–∞–±–æ—Ä —Å–∏–º–≤–æ–ª–æ–≤, –ó–ê–ö–õ–Æ–ß–ï–ù–ù–´–• –≤ –∫–∞–≤—ã—á–∫–∏
# ""
# ''
# ''''''
# """"""
# —Ç–∏–ø—ã —Å–∏–º–≤–æ–ª–æ–≤:
#           1 –±—É–∫–≤—ã (–ª—é–±—ã–µ)
#           2 —Ü–∏—Ñ—Ä—ã
#           3 –≤—Å–µ –Ω–µ–≤–∏–¥–∏–º—ã–µ —Å–∏–º–≤–æ–ª–æ–≤ (–ø—Ä–æ–±–µ–ª—ã, —Ç–∞–±—É–ª—è—Ü–∏—è, –ø–µ—Ä–µ—Ö–æ–¥ —Å—Ç—Ä–æ–∫–∏ –∏ —Ç.–¥.))
#           4 —Å–ø–µ—Ü. —Å–∏–º–≤–æ–ª—ã (" ; ‚Ññ * ! ‚ôû üêé –∏ —Ç.–¥. )

# s = "Hello the 1-st world!"
# # print(s[0])
# # for symbol in s:
# #     print(symbol)

# # —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å—Ç—Ä–æ–∫–∏
# s = "Hello the 1-st world!"
# # s[0] = "*" # TypeError: 'str' object does not support item assignment
# s = s.replace("H", "*", 1) #replace(—á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å, –Ω–∞ —á—Ç–æ –º–µ–Ω—è–µ–º, –∫–æ–ª-–≤–æ –∑–∞–º–µ–Ω)
# print(s)

# s = "101010101"
# s = s.replace("1", "*", 2)
# print(s)

# s = "1111"
# end = "0000"
# result = s + end # —Å–∫–ª–µ–π–∫–∞ —Å—Ç—Ä–æ–∫–∞ - "–∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—è"
# print(result)
# s = "5"
# print(s * 5)  #–¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ

#----------------------------------- –ó–∞–¥–∞—á–∫–∏ -------------------------------------#
# –Ω–∞–ø–µ—á–∞—Ç—å –∫–≤–∞–¥—Ä–∞—Ç –ø—Ä–∏ –ø–æ–º–æ—â–∏ *% –≤ —à–∞—Ö–º–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
# –¥–∞–Ω–æ —Å—Ç—Ä–æ–∫ (–≤ –∫–æ—Å–Ω–æ—Å–ª–µ)
# –¥–∞–Ω–æ —Å—Ç—Ä–æ–∫: 3
# *%*
# %*%
# *%*
# s1 = "*"
# s2 = "%"
# n = 5
# for row in range(n):
#     if row % 2 == 0:
#         res = s1+s2
#         res = res * (n//2)
#         if n % 2 !=0:
#             res += s1
#     else:
#         res = s2 + s1
#         res = res * (n // 2)
#         if n % 2 != 0:
#             res += s2
#     print(res)

# ----------2 —Å–ø–æ—Å–æ–±-------------- #
# –¥–ª—è –Ω–µ—á–µ—Ç–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é
# !!!!–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –¥–æ–¥–µ–ª–∞–π—Ç–µ!!!!
star = '*'
lattice = '#'
side = 3
for i in range(side+1):
    print(f'{(star+lattice)*int(side/2)}')
    star, lattice = lattice, star


