# ------- разбор задач --------- #
# print("------------ задача №3------------")
# #—------------------------------- Задача —--------------------------------#
# дано 4-х значное число, необходимо написать сколько единиц в числе
# сколько сотен и сколько тысяч и десятков

#
#
# # -------  задача --------- #
# # здесь добавлю небольшое ограничение: нельзя использовать операторы и функции для преобразования строк
# # (то есть запрещены операторы + и * и другие методы строк)
# # напечатать ромб (заданы длина , ширина и символ) при помощи цикла for
# # напечатать полый ромб (заданы длина, ширина и символ) при помощи цикла for
#
#
# # решение
# # длина, ширина - минимум 3 символа ->  должны быть нечетным
# # длина == ширина
# # в противном случае неполучиться построить ромб
#
# w = 9 # ширина (кол-во столбцов)
# h = 9 # высота (кол-во строк)
# s = '*'
# # блок проверки
# # длина, ширина - минимум 3 символа ->  должны быть нечетным
# # длина == ширина
# count_symbols = 1 # кол-во символов в строке
# center = w//2 + 1 #где будет угол ромба распологаться
# count_spaces = h - center
# for row in range(1, center+1):
#     # цикл для печати пробелов в начали строки
#     for c in range(0, count_spaces):
#         print(' ', end='')
#     count_spaces -= 1
#
#     # цикл для печати символов
#     for c in range(0, count_symbols):
#         print('*', end='')
#     count_symbols += 2
#     print()
#
#
# count_symbols -= 2
# count_spaces += 1
# # вторая часть ромба
# for row in range(center + 1, h+2):
#     # цикл для печати пробелов в начали строки
#     count_spaces += 1
#     for c in range(0, count_spaces):
#         print(' ', end='')
#
#
#     # цикл для печати символов
#     count_symbols -= 2
#     for c in range(0, count_symbols):
#         print('*', end='')
#
#     print()
#


# ------------------------------- Строки —--------------------------------#
# --------------------------- методы строк ------------------- #
# редактирование и удаление элементов строки

# s = "111010"
# s = s.replace('1', '0', 1)
# print(s)


# # склейка строк
# s = ['1', '1', '1', '0', '1', '0']
# print(s)
# sep = ', ' #разделитель
# s = sep.join(s)
# print(s)

# # # разбиение строки на список строк
# s = "cat, dog, apple, banana"
# s = s.split(', ')
# print(s)

# # # кол-во вхождений в строку
# # count()
# s = "cat is not a dog! Cat is an animal"
# count_a = s.count('a')
# print(count_a)
# count_user_word = s.count('cat')
# print(count_user_word)

# #—------------------------------- Задача —--------------------------------#
# # # дано 4-хзначное число, необходимо написать
# # сколько тысяч  в числе
# # сколько сотен в числе
# # сколько десятков в числе
# # сколько единиц в числе
#
# num = 4235
# num = str(num)
# if len(num) == 4:
#     print(f"тысячи =  {num[0]} \nсотни = {num[1]} \nдесятки = {num[2]} \nединицы = {num[3]} ")
# else:
#     pass



# #—------------------------------- Задача —--------------------------------#
# # 1. посчитать кол-во "0" в строке
# # a также заменить все "0" в строке
#
# s = '1110000 0 00'
# count_0 = s.count('0')
# print(f" кол-во 0 в строке = {count_0}")
# s = s.replace('0','*')
# print(f"new string = {s}")






# # #—------------------------------- Задача —--------------------------------#
# #2. а также заменить первый "0" и последний "0"
# s = '011010000101111'
# print(f"old string - {s}")
# s = s.replace('0', '*', 1)
#
# #замена последнего 0
# s = ''.join(list(reversed(s))) #разворачиваем строку
# s = s.replace('0', '*', 1)
# s = ''.join(list(reversed(s))) #разворачиваем строку
# print(f"new string - {s}")

# #----------------2 -----------------------#
# s = '011010000101111'
# print(f"old string - {s}")
# s = s.replace('0', '*', 1)
#
# s = s[::-1] #разворачиваем строку
# s = s.replace('0', '*', 1)
# s = s[::-1] #разворачиваем строку
# print(f"new string - {s}")



# #—------------------------------- Задача —--------------------------------#
# # дана строка вида 1110001100
# # заменить все исходные 1 на 0
# # заменить все исходные 0 на 1
# # 0001110011
#
# s = '1110001100'
# s = s.replace('1', '*')
# s = s.replace('0', '1')
# s = s.replace('*', '0')
# print(s)




# ----------------------------- Срезы ------------------------------------ #
# # [start_i: end_i(не включительно): step]
# s = '0123456789'
# # print(s[2:]) # с указанного и до конца
# # print(s[:5]) # с стартового и до указанного
# # print(s[2:5]) # с указанного и до не включительно указанного
# print(s[:])
# print(s[::2])
# print(s[1:5:2])
# print(s[::-1])




# # #—------------------------------- Задача —--------------------------------#
# # дневник шпион
# # придумать собственный шифр  для цифр (0-9)
# #
# # ПРИМЕР
# # 1 - !
# # 2 - @  и т.д.
# # 1. пользователь вводит сообщение в котором указан пароль(код) состоящий из цифр
# # 2. зашифровать сообщение и передать его (напечатать)
# # *дополнительно(необязательно)3. расшифровать его обратно
# # ПРИМЕР
# # введите сообщение: ВЫСЫЛАЮ КОД 12341
# # сообщение зашифровал:  ВЫСЫЛАЮ КОД !@#$!
# # сообщение расшифровал:  ВЫСЫЛАЮ КОД 1234
#
# d = {
#     '0': ')',
#     '1': '!',
#     '2': '@',
#     '3': '#',
#     '4': '$',
#     '5': '%',
#     '6': '^',
#     '7': '&',
#     '8': '*',
#     '9': '('}
# message = 'ВЫСЫЛАЮ КОД 12341'
# for key in d:
#     message = message.replace(key, d[key])
#
# print(f' сообщение зашифровал: {message}')




# #—------------------------------- Задача —--------------------------------#
# # дана строка вида 1000110001100
# # заменить только 2-ую единцу
# # 1000*10001100
#
# s = ''
# index_first = s.find('1')
# part1 = s[:index_first + 1]
# s = s[index_first + 1:]
#
# index_second = s.find('1')
# part2 = s[:index_second+1]
# part2 = part2.replace('1', '*')
# part3 = s[index_second+1:]
# s = part1 + part2 + part3
# print(s)
# s = s[:1] + s[1:2].replace('1', '*') + s[2:]
# print(s)




#-------------------------------------2 ---------------------------#

s = '10111'

start = 0
end = 1
list_s = list(s)


count = 1

for i in range(len(list_s)):
    if list_s[i] == '1' and count != 2:
        count += 1
    elif list_s[i] == '1' and count == 2:
        list_s[i] = '*'
        break

s = ''.join(list_s)

print(s)
